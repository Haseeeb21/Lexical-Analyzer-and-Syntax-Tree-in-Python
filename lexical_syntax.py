# -*- coding: utf-8 -*-
"""Lexical_Syntax.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CuhyIhYk9ASCz_sXngXloL0V-IAFgYrv
"""

import re     #Importing Regular Expression Library
import ast    #Importing Abstract Syntax Tree Library

      #Implementing Lexical Analyzer
      
def LexicalAnalyzer(exp):   #Func
  print("\nGiven Expression:", exp)   #Printing expression

          #Tokenization of expression

  tok = re.findall("[0-9a-z-(*+)/]", exp)     #Builtin findall func
                                                #to find in expression
                                                #and store in tok

  print("\nTags/Tokens of Expression:", tok)  #Printing the tokens

      #Implementing Syntax Tree

def SyntaxTree(exp):    #Func
  tree = ast.parse(exp, mode='eval')  #Parses the exp with eval mode

  print("\nEvaluation Answer:")
  print(eval(compile(tree, '', mode='eval')))  #Compiling

  print(ast.dump(tree))  #Returns formatted string

exp = input("Enter Expression: ")   #Taking expression input from user

            #Calling Functions
LexicalAnalyzer(exp)
SyntaxTree(exp)
